<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:p="http://www.springframework.org/schema/p"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
                      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

  <context:annotation-config/>

  <!--todo: enable when you need logging filter-->
  <!--<bean id="loggingFilter" class="org.familysearch.xt.filter.LoggingFilter"/>-->

  <!--todo: enable when you need authentication-->
  <!--
    <bean id="identityManager" class="org.familysearch.cis.client.api.IdentityManagerFactory" factory-method="newInstance"/>
    <bean id="identityAdminManager" class="org.familysearch.cis.admin.client.api.IdentityAdminManagerFactory" factory-method="newInstance"/>
    <bean id="authorizationManager" class="org.familysearch.cas.client.api.AuthorizationManagerFactory" factory-method="newInstance"/>
    <bean id="identityFilter" class="org.familysearch.ciscas.integration.IdentityContextFilter">
      <property name="honorCookies" value="false"/>
      <property name="requestParam" value="access_token"/>
      <property name="identityManager" ref="identityManager"/>
      <property name="authorizationManager" ref="authorizationManager"/>
      <property name="authorizationContext" value="ConclusionTree"/>
      <property name="allowUnauthenticatedAccess" value="true"/>
      <property name="preloadedPermissions">
        <list>
          <value>CtReadPermission</value>
          <value>CtWritePermission</value>
          <value>CtAdminPermission</value>
        </list>
      </property>
    </bean>
  -->

  <!-- DataSource and supporting classes -->
  <!-- The following beans would define a "DataSource" and inject it into a "DbDatamanager" -->
  <tx:annotation-driven transaction-manager="txManager"/>

  <!-- Allow for Java environment properties to be used -->
  <context:property-placeholder />

  <!-- Web Service Providers ... -->
  <bean id="webServicePlace" class="org.familysearch.standards.place.ws.service.WebServicePlace"/>
  <bean id="webServicePlaceRep" class="org.familysearch.standards.place.ws.service.WebServicePlaceRep"/>
  <bean id="webServiceSearch" class="org.familysearch.standards.place.ws.service.WebServiceSearch"/>
  <bean id="webServiceSource" class="org.familysearch.standards.place.ws.service.WebServiceSource"/>
  <bean id="webServiceTypeGroup" class="org.familysearch.standards.place.ws.service.WebServiceTypeGroup"/>
  <bean id="webServiceAttributeType" class="org.familysearch.standards.place.ws.service.WebServiceAttributeType"/>
  <bean id="webServiceCitationType" class="org.familysearch.standards.place.ws.service.WebServiceCitationType"/>
  <bean id="webServiceExtXrefType" class="org.familysearch.standards.place.ws.service.WebServiceExtXrefType"/>
  <bean id="webServiceNameType" class="org.familysearch.standards.place.ws.service.WebServiceNameType"/>
  <bean id="webServicePlaceType" class="org.familysearch.standards.place.ws.service.WebServicePlaceType"/>
  <bean id="webServiceResolutionType" class="org.familysearch.standards.place.ws.service.WebServiceResolutionType"/>

  <!-- Beans to use when running in an AWS-CLOUD environment -->
  <beans profile="aws-cloud">
    <bean id="sasObjectRequester" class="org.familysearch.sas.client.ObjectRequester"/>

    <bean id="dataSource" class="org.familysearch.engage.foundation.dbcp.SasEnabledBasicDataSource"
          p:driverClassName="org.postgresql.Driver"
          p:objectRequester-ref="sasObjectRequester"
          p:sasObjectName="${PLACE_DB_SAS_OBJECT_NAME}"
          p:url="jdbc:postgresql://${PLACE_DB_ADDRESS}:${PLACE_DB_PORT}/${PLACE_DB_DATABASENAME}"
          p:initialSize="5"
          p:maxActive="20"
          p:validationQuery="select 1"
          p:testOnBorrow="true"/>

    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dbDataService" class="org.familysearch.standards.place.service.DbDataService">
      <constructor-arg><ref bean="dataSource"/></constructor-arg>
    </bean>
  </beans>

  <!-- Beans to use when running locally, with a pre-defined DataSource -->
  <beans profile="local-datasource">
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dataSource"/>
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://${PLACE_DB_ADDRESS}:${PLACE_DB_PORT}/${PLACE_DB_DATABASENAME}"/>
        <property name="username" value="${PLACE_DB_USERNAME}"/>
        <property name="password" value="${PLACE_DB_PASSWORD}"/>
    </bean>

    <bean id="dbDataService" class="org.familysearch.standards.place.service.DbDataService">
      <constructor-arg><ref bean="dataSource"/></constructor-arg>
    </bean>
  </beans>

</beans>
